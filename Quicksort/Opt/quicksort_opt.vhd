-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2012.2
-- Copyright (C) 2012 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================
------------------------------------------------------------------------------------
-- Original version modified by Shrinidhi Udupi (udupi@eit.uni-kl.de) 
-- on 17-01-2019
------------------------------------------------------------------------------------

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

library work;
use work.AESL_components.all;
use work.monitor_pkg.all;
entity quicksort is
generic(

enable_generic:integer:= 0;
op:property:= compared_equal_p;
ot:timepoint:= 0

);
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    data_ce0 : OUT STD_LOGIC;
    data_we0 : OUT STD_LOGIC;
    data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    left_r : IN STD_LOGIC_VECTOR (31 downto 0);
    right_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_ce : IN STD_LOGIC;
    op_property : out std_logic_vector(3 downto 0);
    op_timepoint: out std_logic_vector(1 downto 0);
	      S_A_UQ0 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
	S_A_UADDRESS0 : OUT STD_LOGIC_VECTOR(4 DOWNTO 0);
	     S_A_UCE0 : OUT STD_LOGIC;
	     S_A_UCLK : OUT STD_LOGIC;
	      S_A_UD0 : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
	   S_A_URESET : OUT STD_LOGIC;
	     S_A_UWE0 : OUT STD_LOGIC
);

end;


architecture behav of quicksort is 
    attribute CORE_GENERATION_INFO : STRING;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001" ;
    constant ap_ST_st2_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010" ;
    constant ap_ST_st3_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011" ;
    constant ap_ST_st4_fsm_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100" ;
    constant ap_ST_st5_fsm_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101" ;
    constant ap_ST_st6_fsm_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110" ;
    constant ap_ST_st7_fsm_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111" ;
    constant ap_ST_st8_fsm_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000" ;
    constant ap_ST_st9_fsm_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001" ;
    constant ap_ST_st10_fsm_10 : STD_LOGIC_VECTOR (3 downto 0) := "1010" ;
    constant ap_ST_st11_fsm_11 : STD_LOGIC_VECTOR (3 downto 0) := "1011" ;
    constant ap_ST_st12_fsm_12 : STD_LOGIC_VECTOR (3 downto 0) := "1100" ;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0" ;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000" ;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001" ;
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111" ;
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000" ;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1" ;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001" ;
    signal i_4_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_3_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_left_is_right_minus_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_219_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_431 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp : STD_LOGIC_VECTOR (31 downto 0);
    signal s_a_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_next9_fu_258_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_280_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_457 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_addr_1_reg_465 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_next5_fu_291_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_next5_reg_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_475 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_3_fu_303_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_3_reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_addr_2_reg_491 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_next_fu_314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_next_reg_496 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_fu_335_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_fu_378_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_a_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal s_a_ce0 : STD_LOGIC;
    signal s_a_we0 : STD_LOGIC;
    signal s_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_2_reg_95 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar8_reg_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_reg_119 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_135 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar4_reg_149 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_reg_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_i_fu_209_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_270_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_309_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_fu_346_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_i_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_225_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pivot_fu_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_tos_1_fu_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_tos_fu_203_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal stack_tos_write_assign_1_fu_351_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_241_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_fu_236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_247_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_362_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
signal 	op_timepoint_s:  timepoint;
signal 	op_property_s : PROPERTY;


signal enable : enable_array;
    component quicksort_s_a IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;

component monitor is
port(
	ap_clk : IN STD_LOGIC;
	ap_rst : IN STD_LOGIC;
	tmp_fu_191_p2 , tmp_i_3_fu_197_p2, tmp_left_is_right_minus_1, tmp_4_fu_252_p2,
	tmp_7_fu_264_p2 , tmp_3_fu_320_p2 , tmp_1_fu_297_p2, tmp_6_fu_326_p2 , tmp_9_fu_330_p2 , tmp_i_i_fu_340_p2 : IN STD_LOGIC;
	ap_cs_fsm: std_logic_vector(3 downto 0);
	op_timepoint: BUFFER timepoint;
	op_property : BUFFER PROPERTY
);
end component;


begin
    s_a_U : component quicksort_s_a
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_a_address0,
        ce0 => s_a_ce0,
        we0 => s_a_we0,
        d0 => s_a_d0,
        q0 => s_a_q0);


process(op_property_s , op_timepoint_s)
begin

 enable <= (others => '1');
--
-- if( op_property_s = decrement_j_p or op_property_s = compared_equal_p or op_property_s = done_p or op_property_s = increment_i_p or op_property_s = pivot_done_p  or op_property_s = pivot_found_p or op_property_s=search_pivot_p or op_property_s=start_subarray_p or op_property_s=store_data_i_p or op_property_s=subarray_done_p or op_property_s=w_case_p ) then
enable<=not(LUT(PROPERTY'POS (op_property_s),timepoint'POS (op_timepoint_s)));
-- end if;
    --enable(0 to 3)<=not(LUT(PROPERTY'POS (op_property),timepoint'POS (op_timepoint))(0 to 3 ));
    -- enable(4 to 5)<=not(LUT(PROPERTY'POS (op_property),timepoint'POS (op_timepoint))(4 to 5));
--enable(6)<=not(LUT(PROPERTY'POS (op_property),timepoint'POS (op_timepoint))(6 ));
--enable(6 to 16)<=not(LUT(PROPERTY'POS (op_property),timepoint'POS (op_timepoint))(6 to 16));
    end process;

--remove (op_property = pivot_overflow_p) or for all properties and assertions to hold
	
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )) then
-- 		enable(0) <= '0'; else enable(0) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(1) <= '0'; else enable(1) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or    (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(2) <= '0'; else enable(2) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 ) or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(3) <= '0'; else enable(3) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or    (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(4) <= '0'; else enable(4) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )) then
-- 		enable(5) <= '0'; else enable(5) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(6) <= '0'; else enable(6) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(7) <= '0'; else enable(7) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )) then
-- 		enable(8) <= '0'; else enable(8) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(9) <= '0'; else enable(9) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 ) or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(10) <= '0'; else enable(10) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(11) <= '0'; else enable(11) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(12) <= '0'; else enable(12) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(13) <= '0'; else enable(13) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(14) <= '0'; else enable(14) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or   (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(15) <= '0'; else enable(15) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(16) <= '0'; else enable(16) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 2 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = increment_i_p and op_timepoint = 0 )or  (op_property = increment_i_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_found_p and op_timepoint = 3 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = swap_p and op_timepoint = 3 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )or  (op_property = w_case_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 3 )) then
-- 		enable(17) <= '0'; else enable(17) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 2 )) then
-- 		enable(18) <= '0'; else enable(18) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = decrement_j_p and op_timepoint = 0 )or  (op_property = decrement_j_p and op_timepoint = 1 )or  (op_property = done_p and op_timepoint = 0 )or  (op_property = done_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = store_data_i_p and op_timepoint = 1 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 2 )) then
-- 		enable(19) <= '0'; else enable(19) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = compared_equal_p and op_timepoint = 1 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_found_p and op_timepoint = 0 )or  (op_property = pivot_found_p and op_timepoint = 2 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = store_data_i_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 0 )or  (op_property = subarray_done_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 0 )or  (op_property = swap_p and op_timepoint = 1 )or  (op_property = swap_p and op_timepoint = 2 )or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 2 )) then
-- 		enable(20) <= '0'; else enable(20) <= '1'; end if;
-- 	if((op_property = compared_equal_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 0 )or  (op_property = pivot_done_p and op_timepoint = 1 )or  (op_property = pivot_overflow_p)  or  (op_property = search_pivot_p) or  (op_property = start_subarray_p) or  (op_property = w_case_p and op_timepoint = 0 )or  (op_property = w_case_p and op_timepoint = 1 )) then
-- 		enable(21) <= '0'; else enable(21) <= '1'; end if;







    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_1;
            else
if enable(3)='1' then
                if ((ap_const_logic_1 = ap_ce)) then 
                    ap_CS_fsm(3) <= ap_NS_fsm(3);
                end if; 
end if;

if enable(2)='1' then
                if ((ap_const_logic_1 = ap_ce)) then 
                    ap_CS_fsm(2) <= ap_NS_fsm(2);
                end if; 
end if;

 if enable(1)='1' then
               if ((ap_const_logic_1 = ap_ce)) then 
                    ap_CS_fsm(1) <= ap_NS_fsm(1);
                end if; 
end if;

if enable(0)='1' then
                if ((ap_const_logic_1 = ap_ce)) then 
                    ap_CS_fsm(0) <= ap_NS_fsm(0);
                end if; 
end if;

            end if;
        end if;
    end process;


    -- ap_reg assign process. --
    ap_reg_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
    if (enable(4)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st7_fsm_7 = ap_CS_fsm))) then 
                data_addr_1_reg_465 <= esl_trunc(tmp_s_fu_286_p1, 5);
            end if; 
    end if;

     if (enable(5)='1') then
	    if (((ap_const_logic_1 = ap_ce) and (ap_ST_st9_fsm_9 = ap_CS_fsm))) then 
                data_addr_2_reg_491 <= esl_trunc(tmp_2_fu_309_p1, 5);
            end if; 
    end if;

    if(enable(4+2)='1') then
            if ((((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and esl_not((ap_const_lv1_0 = tmp_6_fu_326_p2)) and esl_not((ap_const_lv1_0 = tmp_9_fu_330_p2))) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st11_fsm_11 = ap_CS_fsm)))) then 
                i_1_reg_135 <= i_reg_457;
            elsif ((((ap_const_logic_1 = ap_ce) and (ap_ST_st4_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_4_fu_252_p2)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st5_fsm_5 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st12_fsm_12 = ap_CS_fsm)))) then 
                i_1_reg_135 <= i_4_reg_411;
            end if; 
    end if;

    if(enable(5+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st3_fsm_3 = ap_CS_fsm))) then 
                i_2_fu_20 <= tmp_5_fu_225_p2;
            elsif (((ap_ST_st1_fsm_1 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                i_2_fu_20 <= left_r;
            end if; 
    end if;

     if(enable(6+2)='1') then 
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st2_fsm_2 = ap_CS_fsm))) then 
                i_4_reg_411 <= i_2_fu_20;
            end if; 
     end if;

    if(enable(7+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st7_fsm_7 = ap_CS_fsm))) then 
                i_reg_457 <= i_fu_280_p2;
            end if; 
    end if;

    if(enable(8+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st8_fsm_8 = ap_CS_fsm) and esl_not((ap_const_lv1_0 = tmp_1_fu_297_p2)))) then 
                indvar4_reg_149 <= indvar_next5_reg_470;
            elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st6_fsm_6 = ap_CS_fsm))) then 
                indvar4_reg_149 <= ap_const_lv32_0;
            end if; 	    
    end if;

    if(enable(9+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st4_fsm_4 = ap_CS_fsm) and esl_not((ap_const_lv1_0 = tmp_4_fu_252_p2)) )) then --and esl_not((ap_const_lv1_0 = tmp_7_fu_264_p2))
                indvar8_reg_108 <= indvar_next9_fu_258_p2;
            elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st2_fsm_2 = ap_CS_fsm) and esl_not((tmp_fu_191_p2 = ap_const_lv1_0)))) then 
                indvar8_reg_108 <= ap_const_lv32_0;
            end if; 	    
    end if;

    if(enable(10+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st7_fsm_7 = ap_CS_fsm))) then 
                indvar_next5_reg_470 <= indvar_next5_fu_291_p2;
            end if;     
    end if;

    if(enable(11+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st9_fsm_9 = ap_CS_fsm))) then 
                indvar_next_reg_496 <= indvar_next_fu_314_p2;
            end if;    
    end if;

     if(enable(12+2)='1') then
           if (((ap_const_logic_1 = ap_ce) and (ap_ST_st8_fsm_8 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_1_fu_297_p2))) then 
                indvar_reg_160 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and esl_not((ap_const_lv1_0 = tmp_3_fu_320_p2)))) then 
                indvar_reg_160 <= indvar_next_reg_496;
            end if; 	    
    end if;

     if(enable(13+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st11_fsm_11 = ap_CS_fsm))) then 
                j_1_reg_119 <= j_3_reg_484;
            elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and esl_not((ap_const_lv1_0 = tmp_6_fu_326_p2)) and esl_not((ap_const_lv1_0 = tmp_9_fu_330_p2)))) then 
                j_1_reg_119 <= j_fu_335_p2;
            elsif ((((ap_const_logic_1 = ap_ce) and (ap_ST_st4_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_4_fu_252_p2)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st5_fsm_5 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st12_fsm_12 = ap_CS_fsm)))) then 
                j_1_reg_119 <= j_2_reg_95;
            end if; 
    end if;


     if(enable(14+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st3_fsm_3 = ap_CS_fsm))) then 
                j_2_reg_95 <= s_a_q0;
            elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and (ap_const_lv1_0 = tmp_6_fu_326_p2))) then 
                j_2_reg_95 <= max_fu_378_p3;
            elsif (((ap_ST_st1_fsm_1 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                j_2_reg_95 <= right_r;
            end if;   
    end if;


     if(enable(15+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st9_fsm_9 = ap_CS_fsm))) then 
                j_3_reg_484 <= j_3_fu_303_p2;
            end if; 	    
    end if;


     if(enable(22+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st5_fsm_5 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st12_fsm_12 = ap_CS_fsm))) then 
                pivot_fu_24 <= data_q0;
            end if;   
    end if;


     if(enable(23+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and (ap_const_lv1_0 = tmp_6_fu_326_p2) and (ap_const_lv1_0 = tmp_i_i_fu_340_p2))) then 
                s_tos_1_fu_28 <= stack_tos_write_assign_1_fu_351_p2;
            elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st2_fsm_2 = ap_CS_fsm) and (tmp_fu_191_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_3_fu_197_p2))) then 
                s_tos_1_fu_28 <= s_tos_fu_203_p2;
            elsif (((ap_ST_st1_fsm_1 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                s_tos_1_fu_28 <= ap_const_lv32_0;
            end if; 	    
    end if;

  
     if(enable(24+2)='1') then
          if (((ap_const_logic_1 = ap_ce) and (ap_ST_st2_fsm_2 = ap_CS_fsm) and esl_not((tmp_fu_191_p2 = ap_const_lv1_0)))) then 
                tmp1_reg_431(1) <= tmp1_fu_219_p2(1);
                tmp1_reg_431(2) <= tmp1_fu_219_p2(2);
                tmp1_reg_431(3) <= tmp1_fu_219_p2(3);
                tmp1_reg_431(4) <= tmp1_fu_219_p2(4);
                tmp1_reg_431(5) <= tmp1_fu_219_p2(5);
                tmp1_reg_431(6) <= tmp1_fu_219_p2(6);
                tmp1_reg_431(7) <= tmp1_fu_219_p2(7);
                tmp1_reg_431(8) <= tmp1_fu_219_p2(8);
                tmp1_reg_431(9) <= tmp1_fu_219_p2(9);
                tmp1_reg_431(10) <= tmp1_fu_219_p2(10);
                tmp1_reg_431(11) <= tmp1_fu_219_p2(11);
                tmp1_reg_431(12) <= tmp1_fu_219_p2(12);
                tmp1_reg_431(13) <= tmp1_fu_219_p2(13);
                tmp1_reg_431(14) <= tmp1_fu_219_p2(14);
                tmp1_reg_431(15) <= tmp1_fu_219_p2(15);
                tmp1_reg_431(16) <= tmp1_fu_219_p2(16);
                tmp1_reg_431(17) <= tmp1_fu_219_p2(17);
                tmp1_reg_431(18) <= tmp1_fu_219_p2(18);
                tmp1_reg_431(19) <= tmp1_fu_219_p2(19);
                tmp1_reg_431(20) <= tmp1_fu_219_p2(20);
                tmp1_reg_431(21) <= tmp1_fu_219_p2(21);
                tmp1_reg_431(22) <= tmp1_fu_219_p2(22);
                tmp1_reg_431(23) <= tmp1_fu_219_p2(23);
                tmp1_reg_431(24) <= tmp1_fu_219_p2(24);
                tmp1_reg_431(25) <= tmp1_fu_219_p2(25);
                tmp1_reg_431(26) <= tmp1_fu_219_p2(26);
                tmp1_reg_431(27) <= tmp1_fu_219_p2(27);
                tmp1_reg_431(28) <= tmp1_fu_219_p2(28);
                tmp1_reg_431(29) <= tmp1_fu_219_p2(29);
                tmp1_reg_431(30) <= tmp1_fu_219_p2(30);
                tmp1_reg_431(31) <= tmp1_fu_219_p2(31);
            end if;     
    end if;

  
     if(enable(25+2)='1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_st8_fsm_8 = ap_CS_fsm))) then 
                tmp_11_reg_475 <= data_q0;
            end if;     
    end if;
        end if;
    end process;
    tmp1_reg_431(0) <= '0';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process(ap_CS_fsm, ap_ce, tmp_fu_191_p2, tmp_i_3_fu_197_p2, tmp_left_is_right_minus_1, tmp_4_fu_252_p2, tmp_7_fu_264_p2, tmp_3_fu_320_p2, tmp_6_fu_326_p2, tmp_9_fu_330_p2, tmp_1_fu_297_p2)
    begin
	if (ap_const_logic_1 = ap_ce) and (ap_ST_st4_fsm_4 = ap_CS_fsm) and tmp_left_is_right_minus_1 = ap_const_lv1_1 then
            ap_NS_fsm <= ap_ST_st12_fsm_12;
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and esl_not((ap_const_lv1_0 = tmp_6_fu_326_p2)) and (ap_const_lv1_0 = tmp_9_fu_330_p2))) then 
            ap_NS_fsm <= ap_ST_st11_fsm_11;
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st9_fsm_9 = ap_CS_fsm))) then 
            ap_NS_fsm <= ap_ST_st10_fsm_10;
        elsif ((((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and esl_not((ap_const_lv1_0 = tmp_3_fu_320_p2))) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st8_fsm_8 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_1_fu_297_p2)))) then 
            ap_NS_fsm <= ap_ST_st9_fsm_9;
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st7_fsm_7 = ap_CS_fsm))) then 
            ap_NS_fsm <= ap_ST_st8_fsm_8;
        elsif ((((ap_const_logic_1 = ap_ce) and (ap_ST_st6_fsm_6 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st8_fsm_8 = ap_CS_fsm) and esl_not((ap_const_lv1_0 = tmp_1_fu_297_p2))))) then 
            ap_NS_fsm <= ap_ST_st7_fsm_7;
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st4_fsm_4 = ap_CS_fsm) and esl_not((ap_const_lv1_0 = tmp_4_fu_252_p2)) and (ap_const_lv1_0 = tmp_7_fu_264_p2))) then 
            ap_NS_fsm <= ap_ST_st5_fsm_5;
        elsif ((((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and esl_not((ap_const_lv1_0 = tmp_6_fu_326_p2)) and esl_not((ap_const_lv1_0 = tmp_9_fu_330_p2))) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st4_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_4_fu_252_p2)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st5_fsm_5 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st11_fsm_11 = ap_CS_fsm))) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st12_fsm_12 = ap_CS_fsm))) then 
            ap_NS_fsm <= ap_ST_st6_fsm_6;
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st2_fsm_2 = ap_CS_fsm) and (tmp_fu_191_p2 = ap_const_lv1_0) and esl_not((ap_const_lv1_0 = tmp_i_3_fu_197_p2)))) then 
            ap_NS_fsm <= ap_ST_st1_fsm_1;						--left < right                            
        elsif ((((ap_const_logic_1 = ap_ce) and (ap_ST_st2_fsm_2 = ap_CS_fsm) and esl_not((tmp_fu_191_p2 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st4_fsm_4 = ap_CS_fsm) and
	    -- h < right						2h < right
        esl_not((ap_const_lv1_0 = tmp_4_fu_252_p2)) and esl_not((ap_const_lv1_0 = tmp_7_fu_264_p2))) )) then 
            ap_NS_fsm <= ap_ST_st4_fsm_4;						--left >= right					 
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st2_fsm_2 = ap_CS_fsm) and (tmp_fu_191_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_3_fu_197_p2))) then 
            ap_NS_fsm <= ap_ST_st3_fsm_3;
        elsif ((((ap_ST_st1_fsm_1 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st3_fsm_3 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and (ap_const_lv1_0 = tmp_6_fu_326_p2)))) then 
            ap_NS_fsm <= ap_ST_st2_fsm_2;
        else 
            ap_NS_fsm <= ap_CS_fsm;
        end if; 
    end process;


    -- data_address0 assign process. --
    data_address0_assign_proc : process(ap_CS_fsm, ap_ce, tmp_4_fu_252_p2, tmp_7_fu_264_p2, data_addr_1_reg_465, data_addr_2_reg_491, tmp_3_fu_320_p2, tmp_6_fu_326_p2, tmp_9_fu_330_p2, tmp_8_fu_270_p1, tmp_s_fu_286_p1, tmp_2_fu_309_p1)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_ST_st11_fsm_11 = ap_CS_fsm))) then 
            data_address0 <= data_addr_2_reg_491;
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and esl_not((ap_const_lv1_0 = tmp_6_fu_326_p2)) and (ap_const_lv1_0 = tmp_9_fu_330_p2))) then 
            data_address0 <= data_addr_1_reg_465;
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st9_fsm_9 = ap_CS_fsm))) then 
            data_address0 <= esl_trunc(tmp_2_fu_309_p1, 5);
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st7_fsm_7 = ap_CS_fsm))) then 
            data_address0 <= esl_trunc(tmp_s_fu_286_p1, 5);
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st4_fsm_4 = ap_CS_fsm) and esl_not((ap_const_lv1_0 = tmp_4_fu_252_p2)) and (ap_const_lv1_0 = tmp_7_fu_264_p2))) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st12_fsm_12 = ap_CS_fsm) ) then 
            data_address0 <= esl_trunc(tmp_8_fu_270_p1, 5);
        else 
            data_address0 <= data_addr_2_reg_491;
        end if; 
    end process;


    -- data_ce0 assign process. --
    data_ce0_assign_proc : process(ap_CS_fsm, ap_ce, tmp_4_fu_252_p2, tmp_7_fu_264_p2, tmp_3_fu_320_p2, tmp_6_fu_326_p2, tmp_9_fu_330_p2,tmp_left_is_right_minus_1)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_ST_st4_fsm_4 = ap_CS_fsm) and esl_not((ap_const_lv1_0 = tmp_4_fu_252_p2)) and (ap_const_lv1_0 = tmp_7_fu_264_p2) and (tmp_left_is_right_minus_1 =ap_const_lv1_0)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st7_fsm_7 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st9_fsm_9 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st11_fsm_11 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and esl_not((ap_const_lv1_0 = tmp_6_fu_326_p2)) and (ap_const_lv1_0 = tmp_9_fu_330_p2))) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st12_fsm_12 = ap_CS_fsm))) then 
            data_ce0 <= ap_const_logic_1;
        else 
            data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- data_d0 assign process. --
    data_d0_assign_proc : process(data_q0, ap_CS_fsm, ap_ce, tmp_11_reg_475, tmp_3_fu_320_p2, tmp_6_fu_326_p2, tmp_9_fu_330_p2)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_ST_st11_fsm_11 = ap_CS_fsm))) then 
            data_d0 <= tmp_11_reg_475;
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and esl_not((ap_const_lv1_0 = tmp_6_fu_326_p2)) and (ap_const_lv1_0 = tmp_9_fu_330_p2))) then 
            data_d0 <= data_q0;
        else 
            data_d0 <= tmp_11_reg_475;
        end if; 
    end process;


    -- data_we0 assign process. --
    data_we0_assign_proc : process(ap_CS_fsm, ap_ce, tmp_3_fu_320_p2, tmp_6_fu_326_p2, tmp_9_fu_330_p2)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_ST_st11_fsm_11 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and esl_not((ap_const_lv1_0 = tmp_6_fu_326_p2)) and (ap_const_lv1_0 = tmp_9_fu_330_p2)))) then 
            data_we0 <= ap_const_logic_1;
        else 
            data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    h_fu_236_p2 <= esl_add(i_4_reg_411, indvar8_reg_108);
    i_fu_280_p2 <= esl_add(i_1_reg_135, indvar4_reg_149);
    indvar_next5_fu_291_p2 <= esl_add(indvar4_reg_149, ap_const_lv32_1);
    indvar_next9_fu_258_p2 <= esl_add(indvar8_reg_108, ap_const_lv32_1);
    indvar_next_fu_314_p2 <= esl_add(indvar_reg_160, ap_const_lv32_1);
    j_3_fu_303_p2 <= esl_sub(j_1_reg_119, indvar_reg_160);
    j_fu_335_p2 <= esl_add(j_3_reg_484, ap_const_lv32_FFFFFFFF);
    max_fu_378_p3 <= 
        tmp_10_fu_362_p2 when (rev_fu_372_p2(0) = '1') else 
        i_4_reg_411;
    rev_fu_372_p2 <= (slt_fu_367_p2 xor ap_const_lv1_1);

    -- s_a_address0 assign process. --
    s_a_address0_assign_proc : process(ap_CS_fsm, ap_ce, tmp_fu_191_p2, tmp_i_3_fu_197_p2, tmp_3_fu_320_p2, tmp_6_fu_326_p2, tmp_13_i_fu_209_p1, tmp_i_fu_346_p1, tmp_i_i_fu_340_p2)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and (ap_const_lv1_0 = tmp_6_fu_326_p2) and (ap_const_lv1_0 = tmp_i_i_fu_340_p2))) then 
            s_a_address0 <= esl_trunc(tmp_i_fu_346_p1, 5);
        elsif (((ap_const_logic_1 = ap_ce) and (ap_ST_st2_fsm_2 = ap_CS_fsm) and (tmp_fu_191_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_3_fu_197_p2))) then 
            s_a_address0 <= esl_trunc(tmp_13_i_fu_209_p1, 5);
        else 
            s_a_address0 <= esl_trunc(tmp_i_fu_346_p1, 5);
        end if; 
    end process;


    -- s_a_ce0 assign process. --
    s_a_ce0_assign_proc : process(ap_CS_fsm, ap_ce, tmp_fu_191_p2, tmp_i_3_fu_197_p2, tmp_3_fu_320_p2, tmp_6_fu_326_p2, tmp_i_i_fu_340_p2)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_ST_st2_fsm_2 = ap_CS_fsm) and (tmp_fu_191_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_i_3_fu_197_p2)) or ((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and (ap_const_lv1_0 = tmp_6_fu_326_p2) and (ap_const_lv1_0 = tmp_i_i_fu_340_p2)))) then 
            s_a_ce0 <= ap_const_logic_1;
        else 
            s_a_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    s_a_d0 <= j_2_reg_95;

    -- s_a_we0 assign process. --
    s_a_we0_assign_proc : process(ap_CS_fsm, ap_ce, tmp_3_fu_320_p2, tmp_6_fu_326_p2, tmp_i_i_fu_340_p2)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_ST_st10_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_320_p2) and (ap_const_lv1_0 = tmp_6_fu_326_p2) and (ap_const_lv1_0 = tmp_i_i_fu_340_p2)))) then 
            s_a_we0 <= ap_const_logic_1;
        else 
            s_a_we0 <= ap_const_logic_0;
        end if; 
    end process;

    s_tos_fu_203_p2 <= esl_add(s_tos_1_fu_28, ap_const_lv32_FFFFFFFF);
    slt_fu_367_p2 <= esl_icmp_slt(tmp_10_fu_362_p2, i_4_reg_411);
    stack_tos_write_assign_1_fu_351_p2 <= esl_add(s_tos_1_fu_28, ap_const_lv32_1);
    tmp1_fu_219_p2 <= esl_shl(i_2_fu_20, ap_const_lv32_1); --2*left_r
    tmp2_fu_241_p2 <= esl_shl(indvar8_reg_108, ap_const_lv32_1); --Multiply (h-left_r) by two
    tmp3_fu_247_p2 <= esl_add(tmp1_reg_431, tmp2_fu_241_p2); --2h
    tmp_10_fu_362_p2 <= esl_add(i_reg_457, ap_const_lv32_FFFFFFFF);
    tmp_13_i_fu_209_p1 <= esl_sext(s_tos_fu_203_p2, 64);
    tmp_1_fu_297_p2 <= esl_icmp_slt(data_q0, pivot_fu_24);
    tmp_2_fu_309_p1 <= esl_sext(j_3_fu_303_p2, 64);
    tmp_3_fu_320_p2 <= esl_icmp_sgt(data_q0, pivot_fu_24);
    tmp_4_fu_252_p2 <= esl_icmp_slt(h_fu_236_p2, j_2_reg_95); -- h < right_r
    tmp_5_fu_225_p2 <= esl_add(j_2_reg_95, ap_const_lv32_1);
    tmp_6_fu_326_p2 <= esl_icmp_slt(i_reg_457, j_3_reg_484);
    tmp_7_fu_264_p2 <= esl_icmp_slt(tmp3_fu_247_p2, j_2_reg_95);-- 2h < right_r
    tmp_8_fu_270_p1 <= esl_sext(h_fu_236_p2, 64);
    tmp_9_fu_330_p2 <= esl_icmp_eq(tmp_11_reg_475, data_q0);
    tmp_fu_191_p2 <= esl_icmp_slt(i_2_fu_20, j_2_reg_95);
    tmp_i_3_fu_197_p2 <= esl_icmp_eq(s_tos_1_fu_28, ap_const_lv32_0);
    tmp_i_fu_346_p1 <= esl_sext(s_tos_1_fu_28, 64);
    tmp_i_i_fu_340_p2 <= esl_icmp_eq(s_tos_1_fu_28, ap_const_lv32_20);
    tmp_s_fu_286_p1 <= esl_sext(i_fu_280_p2, 64);

    tmp_left_is_right_minus_1 <= esl_icmp_eq(tmp,j_2_reg_95);
     tmp  <= esl_add(i_4_reg_411,ap_const_lv32_1);


monitor_comp:monitor 
port map(
	ap_clk ,
	ap_rst ,
	tmp_fu_191_p2(0) ,
	tmp_i_3_fu_197_p2(0),
	tmp_left_is_right_minus_1(0),
	tmp_4_fu_252_p2(0),
	tmp_7_fu_264_p2 (0),
	tmp_3_fu_320_p2(0) ,
	tmp_1_fu_297_p2(0),
	tmp_6_fu_326_p2 (0),
	tmp_9_fu_330_p2(0) ,
	tmp_i_i_fu_340_p2(0) ,
	ap_cs_fsm,
	op_timepoint_s,
	op_property_s 
);

op_property <= std_logic_vector(to_unsigned(PROPERTY'POS(op_property_s),4));
op_timepoint <= std_logic_vector(to_unsigned(TIMEPOINT'POS(op_timepoint_s),2));
--process(op_property,op_timepoint)
--begin
    --if(op_property=op and op_timepoint=ot) then
	--enable <= (others =>'1');
	--enable(enable_generic) <= '0';
    --else
	--enable <= (others => '1');
 --   end if;
--end process;
end behav;
